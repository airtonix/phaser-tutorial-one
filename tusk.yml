tasks:

  dev:
    run:
      - >-
        docker-compose
        -f docker-compose.yml
        -f docker-compose--local.yml
        up app

  dev:docker:run:
    args:
      service:
        usage: docker-compose service name
      command:
        usage: command to run
    run: >-
      docker-compose
      -f docker-compose.yml
      -f docker-compose--local.yml
      run --rm
      ${service} ${command}

  dev:setup:
    run:
      - task:
          name: dev:docker:build
          options:
            service: app

  dev:docker:build:
    private: true
    options:
      service:
          usage: docker compose service name
    run:
      - >-
        docker-compose
        -f ./docker-compose.yml
        -f ./docker-compose--local.yml
        build ${service}


#
# CI
#
  ci:setup:
    run:
      - task:
          name: ci:docker:build
          options:
            repo: airtonix/phaser-tutorial-one_app

  ci:docker:build:
    options:
      repo:
        usage: Docker repository to use
        type: string
    run:
    - command: docker pull ${repo}:builder || true
    - command: >-
        docker build .
        --cache-from ${repo}:builder
        --file ./app/Dockerfile
        --tag ${repo}:builder
    - command: docker pull ${repo}:latest || true
    - command: >-
        docker build .
        --cache-from ${repo}:builder
        --cache-from ${repo}:latest
        --file ./app/Dockerfile
        --tag ci

  ci:docker:publish:
    run:
      - echo "foo"

  ci:app:tusk:
    options:
      taskname:
        usage: Tusk task
        required: true
      taskoptions:
        usage: tusk task options
      taskargs:
        usage: tusk task args
    run:
      - task:
          name: ci:docker:run
          options:
            service: app
            command: tusk ${taskname} ${taskoptions} ${taskargs}

  ci:app:test:
    run:
      - task:
          name: ci:app:tusk
          options:
            taskname: test
